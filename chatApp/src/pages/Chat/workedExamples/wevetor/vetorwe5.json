{
    "Título da disciplina": "Programação Orientada a Objetos em Java",
    "Tópico da disciplina": "Trabalhando com Vetores de Objetos",
    "Conhecimento prévio": "Conhecimento intermediário em Java e programação orientada a objetos.",
    "Local onde foi retirado": "Material do curso online",
    "Descrição do problema": "Desenvolver um programa em Java para gerenciar uma lista de livros. Cada livro é representado como um objeto com atributos como título, autor e ano de publicação. O programa deve permitir a adição, remoção e listagem de livros na lista.",
    "Resultado": "O programa deve permitir que o usuário gerencie uma lista de livros, adicionando, removendo e listando os livros presentes na lista.",
    "Material complementar": "Documentação Java para trabalhar com objetos e vetores de objetos.",

    "Problema com worked Example Correto": {
        "Reflexivo": "O problema do worked example correto envolve a criação de um programa que gerencia uma lista de objetos em Java, o que é um conceito fundamental em programação orientada a objetos.",
        "Proposta de solução": {
            "Etapas de Solução": "1. Criar uma classe `Livro` com atributos como título, autor e ano de publicação.\n2. Criar uma classe `GerenciadorLivros` que permite adicionar, remover e listar livros.\n3. Utilizar um vetor de objetos `Livro` para armazenar a lista de livros.\n4. Implementar métodos para adicionar, remover e listar livros na classe `GerenciadorLivros`."
        },
        "Teste": "Você pode testar o programa adicionando alguns livros à lista, removendo alguns deles e listando os livros presentes. O resultado esperado é que o programa permita o gerenciamento da lista de livros.",
        "Solução Correta": "Aqui está uma proposta de solução de código em Java:\n\n```java\nimport java.util.ArrayList;\n\nclass Livro {\n    private String titulo;\n    private String autor;\n    private int anoPublicacao;\n\n    public Livro(String titulo, String autor, int anoPublicacao) {\n        this.titulo = titulo;\n        this.autor = autor;\n        this.anoPublicacao = anoPublicacao;\n    }\n\n    @Override\n    public String toString() {\n        return \"Livro: \" + titulo + \" (Autor: \" + autor + \", Ano: \" + anoPublicacao + \")\";\n    }\n}\n\nclass GerenciadorLivros {\n    private ArrayList<Livro> listaLivros = new ArrayList<>();\n\n    public void adicionarLivro(Livro livro) {\n        listaLivros.add(livro);\n    }\n\n    public void removerLivro(Livro livro) {\n        listaLivros.remove(livro);\n    }\n\n    public void listarLivros() {\n        for (Livro livro : listaLivros) {\n            System.out.println(livro);\n        }\n    }\n}\n\npublic class ProgramaLivros {\n    public static void main(String[] args) {\n        Livro livro1 = new Livro(\"Aventuras em Java\", \"Autor A\", 2020);\n        Livro livro2 = new Livro(\"Programação Avançada\", \"Autor B\", 2019);\n\n        GerenciadorLivros gerenciador = new GerenciadorLivros();\n        gerenciador.adicionarLivro(livro1);\n        gerenciador.adicionarLivro(livro2);\n        gerenciador.listarLivros();\n        gerenciador.removerLivro(livro1);\n        gerenciador.listarLivros();\n    }\n}\n```\n"
    },

    "Problema com worked Example Incorreto": {
        "Reflexivo": "O problema com worked example incorreto envolve um erro na implementação do programa de gerenciamento de livros, o que pode ser uma oportunidade de aprendizado para os alunos.",
        "Solução Incorreta": "Aqui está uma proposta de solução incorreta de código em Java que não realiza o gerenciamento de livros adequadamente:\n\n```java\nimport java.util.ArrayList;\n\nclass Livro {\n    private String titulo;\n    private String autor;\n    private int anoPublicacao;\n\n    public Livro(String titulo, String autor, int anoPublicacao) {\n        this.titulo = titulo;\n        this.autor = autor;\n        this.anoPublicacao = anoPublicacao;\n    }\n}\n\npublic class ProgramaLivrosIncorreto {\n    public static void main(String[] args) {\n        Livro livro1 = new Livro(\"Aventuras em Java\", \"Autor A\", 2020);\n        Livro livro2 = new Livro(\"Programação Avançada\", \"Autor B\", 2019);\n        ArrayList<Livro> listaLivros = new ArrayList<>();\n        listaLivros.add(livro1);\n        listaLivros.add(livro2);\n        for (Livro livro : listaLivros) {\n            System.out.println(livro);\n        }\n    }\n}\n```\n",
        "Teste": "Você pode testar o programa adicionando alguns livros à lista, removendo alguns deles e listando os livros presentes. O resultado esperado é que o programa permita o gerenciamento da lista de livros, mas a solução proposta incorreta não permite isso.",
        "Você consegue identificar o erro?": "O erro está na falta de uma classe `GerenciadorLivros` e métodos para adicionar, remover e listar livros na solução incorreta. Além disso, a solução não fornece uma maneira eficaz de gerenciar a lista de livros.",
        "Resposta": "O erro ocorre na parte em que a solução incorreta não fornece uma estrutura organizada para gerenciar a lista de livros. Ela não cria uma classe `GerenciadorLivros` nem implementa métodos para adicionar, remover e listar livros.",
        "Proposta de solução correta": "[PASSO 1] Criar uma classe `Livro` com atributos como título, autor e ano de publicação. [PASSO 2] Criar uma classe `GerenciadorLivros` que permite adicionar, remover e listar livros. [PASSO 3] Utilizar um vetor de objetos `Livro` para armazenar a lista de livros. [PASSO 4] Implementar métodos para adicionar, remover e listar livros na classe `GerenciadorLivros`."
    }
}

{
    "title": "Palíndromo",
    "topic": "Trabalhando com Funções em Java",
    "knowledge": "Conhecimento intermediário em Java e manipulação de strings.",
    "origin": "Livro de Programação Java Intermediária",
    "description": "Desenvolver uma função em Java que aceite uma string como parâmetro e verifique se ela é um palíndromo.",
    "result": "A função deve imprimir ou retornar uma mensagem indicando se a string é um palíndromo.",
    "extra": "Vídeo tutorial sobre como trabalhar com funções em Java e manipulação de strings.",
    "problemWECorrect": {
      "thinking": "O problema do worked example correto envolve a criação de uma função que verifica se uma string é um palíndromo.",
      "solutionProposal": {
        "steps": "\n[PASSO 1]. Definir a assinatura da função, indicando que ela aceita uma string como parâmetro.\n[PASSO 2]. Remover espaços em branco e converter a string para minúsculas para garantir uma comparação insensível a maiúsculas/minúsculas.\n[PASSO 3]. Usar dois índices, um do início e outro do final, para comparar os caracteres da string.\n[PASSO 4]. Se todos os pares de caracteres correspondentes forem iguais, a string é um palíndromo.\n[PASSO 5]. Retornar verdadeiro se a string for um palíndromo, falso caso contrário.",
        "test": "Você pode testar a função com a string 'Ame a ema'. O resultado esperado é 'true'."
      },
      "correctSolutionProposal": "public class VerificarPalindromo {\n    public static void main(String[] args) {\n        String texto = \"Ame a ema\";\n        boolean resultado = verificarPalindromo(texto);\n        System.out.println(\"É palíndromo: \" + resultado);\n    }\n\n    public static boolean verificarPalindromo(String texto) {\n        if (texto == null) {\n            return false;\n        }\n        texto = texto.replaceAll(\"\\s\", \"\").toLowerCase();\n        int inicio = 0;\n        int fim = texto.length() - 1;\n        while (inicio < fim) {\n            if (texto.charAt(inicio) != texto.charAt(fim)) {\n                return false;\n            }\n            inicio++;\n            fim--;\n        }\n        return true;\n    }\n}"
    },
    "problemWEIncorrect": {
      "thinking": "O problema com worked example incorreto envolve um erro na solução da função, o que pode ser uma oportunidade de aprendizado para os alunos.",
      "incorrectSolution": "public class VerificarPalindromoIncorreto {\n    public static void main(String[] args) {\n        String texto = \"Ame a ema\";\n        boolean resultado = verificarPalindromo(texto);\n        System.out.println(\"É palíndromo: \" + resultado);\n    }\n\n    public static boolean verificarPalindromo(String texto) {\n        if (texto == null) {\n            return true;\n        }\n        texto = texto.replaceAll(\"\\s\", \"\").toLowerCase();\n        int inicio = 0;\n        int fim = texto.length();\n        while (inicio < fim) {\n            if (texto.charAt(inicio) != texto.charAt(fim)) {\n                return false;\n            }\n            inicio++;\n            fim--;\n        }\n        return true;\n    }\n}",
      "test": "Você pode testar a função com a mesma string: 'Ame a ema'. O resultado esperado é 'true', mas a solução proposta incorreta produzirá resultados errados.",
      "options": {
        "one": "linha 13",
        "two": "linha 17",
        "three": "linha 16",
        "four": "linha 18",
        "five": "não sei identificar"
      },
      "correctOption": "3",
      "error": "O erro está na forma como o índice 'fim' é inicializado e comparado na solução incorreta. O problema maior ocorre no acesso a posição indevida na linha 16.",
      "response": "O erro acontece na inicialização do índice 'fim' que deveria ser 'fim = length() - 1;' ",
      "correctSolutionProposal": "\n[PASSO 1]. Definir a assinatura da função, indicando que ela aceita uma string como parâmetro.\n[PASSO 2]. Remover espaços em branco e converter a string para minúsculas para garantir uma comparação insensível a maiúsculas/minúsculas.\n[PASSO 3]. Usar dois índices, um do início e outro do final, para comparar os caracteres da string.\n[PASSO 4]. Se todos os pares de caracteres correspondentes forem iguais, a string é um palíndromo.\n[PASSO 5]. Retornar verdadeiro se a string for um palíndromo, falso caso contrário."
    }
  }
  
{
    "title": "Número Primo",
    "topic": "Trabalhando com Funções em Java",
    "knowledge": "Conhecimento intermediário em Java e lógica de programação.",
    "origin": "Livro de Programação Java Intermediária",
    "description": "Desenvolver uma função em Java que aceite um número como parâmetro e determine se ele é primo ou não.",
    "result": "A função deve imprimir ou retornar uma mensagem indicando se o número é primo ou não.",
    "extra": "Vídeo tutorial sobre como trabalhar com funções em Java e lógica para verificar números primos.",
    "problemWECorrect": {
      "thinking": "O problema do worked example correto envolve a criação de uma função que verifica se um número é primo.",
      "solutionProposal": {
        "steps": "\n[PASSO 1]. Definir a assinatura da função, indicando que ela aceita um parâmetro.\n[PASSO 2]. Verificar se o número é menor ou igual a 1; se sim, não é primo.\n[PASSO 3]. Usar um loop para verificar se o número é divisível por outros números.\n[PASSO 4]. Se encontrar um divisor diferente de 1 e do próprio número, então o número não é primo.\n[PASSO 5]. Se nenhum divisor é encontrado, o número é primo.",
        "test": "Você pode testar a função com o número 7. O resultado esperado é 'Primo'."
      },
      "correctSolutionProposal": "public class VerificarPrimo {\n    public static void main(String[] args) {\n        int numero = 7;\n        if (ehPrimo(numero)) {\n            System.out.println(\"Primo\");\n        } else {\n            System.out.println(\"Não é Primo\");\n        }\n    }\n\n    public static boolean ehPrimo(int numero) {\n        if (numero <= 1) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(numero); i++) {\n            if (numero % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}"
    },
    "problemWEIncorrect": {
      "thinking": "O problema com worked example incorreto envolve um erro na solução da função, o que pode ser uma oportunidade de aprendizado para os alunos.",
      "incorrectSolution": "public class VerificarPrimoIncorreto {\n    public static void main(String[] args) {\n        int numero = 7;\n        if (ehPrimo(numero)) {\n            System.out.println(\"Primo\");\n        } else {\n            System.out.println(\"Não é Primo\");\n        }\n    }\n\n    public static boolean ehPrimo(int numero) {\n        if (numero <= 1) {\n            return true;\n        }\n        for (int i = 2; i <= numero; i++) {\n            if (numero % i == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}",
      "test": "Você pode testar a função com o mesmo número: 7. O resultado esperado é 'Primo', mas a solução proposta incorreta produzirá resultados errados.",
      "options": {
        "one": "linha 11",
        "two": "linha 13",
        "three": "linha 17",
        "four": "linha 12",
        "five": "não sei identificar"
      },
      "correctOption": "3",
      "error": "O erro está na lógica da condição na solução incorreta. A condição deveria ser 'return false' quando encontrar um divisor, indicando que o número não é primo.",
      "response": "O erro ocorre na lógica da condição na solução incorreta. A condição deveria ser 'return false' quando encontrar um divisor, indicando que o número não é primo.",
      "correctSolutionProposal": "\n[PASSO 1]. Definir a assinatura da função, indicando que ela aceita um parâmetro.\n[PASSO 2]. Verificar se o número é menor ou igual a 1; se sim, não é primo.\n[PASSO 3]. Usar um loop para verificar se o número é divisível por outros números.\n[PASSO 4]. Se encontrar um divisor diferente de 1 e do próprio número, então o número não é primo.\n[PASSO 5]. Se nenhum divisor é encontrado, o número é primo."
    }
  }
  
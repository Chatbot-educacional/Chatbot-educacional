{
  "title": "V4",
  "content": "Rectangle has the dimensions of a rectangle.",
  "correct_code": "package main\n\nimport \"math\"\n\n// Rectangle has the dimensions of a rectangle.\ntype Rectangle struct {\n\tWidth  float64\n\tHeight float64\n}\n\n// Area returns the area of the rectangle.\nfunc (r Rectangle) Area() float64 {\n\treturn r.Width * r.Height\n}\n\n// Perimeter returns the perimeter of a rectangle.\nfunc Perimeter(rectangle Rectangle) float64 {\n\treturn 2 * (rectangle.Width + rectangle.Height)\n}\n\n// Circle represents a circle...\ntype Circle struct {\n\tRadius float64\n}\n\n// Area returns the area of the circle.\nfunc (c Circle) Area() float64 {\n\treturn math.Pi * c.Radius * c.Radius\n}",
  "test_code": "package main\n\nimport (\n\t\"testing\"\n)\n\nfunc TestPerimeter(t *testing.T) {\n\trectangle := Rectangle{10.0, 10.0}\n\tgot := Perimeter(rectangle)\n\twant := 40.0\n\n\tif got != want {\n\t\tt.Errorf(\"got %g want %g\", got, want)\n\t}\n}\n\nfunc TestArea(t *testing.T) {\n\n\tt.Run(\"rectangles\", func(t *testing.T) {\n\t\trectangle := Rectangle{12, 6}\n\t\tgot := rectangle.Area()\n\t\twant := 72.0\n\n\t\tif got != want {\n\t\t\tt.Errorf(\"got %g want %g\", got, want)\n\t\t}\n\t})\n\n\tt.Run(\"circles\", func(t *testing.T) {\n\t\tcircle := Circle{10}\n\t\tgot := circle.Area()\n\t\twant := 314.1592653589793\n\n\t\tif got != want {\n\t\t\tt.Errorf(\"got %g want %g\", got, want)\n\t\t}\n\t})\n\n}",
  "difficulty": "Intermedi√°rio"
}
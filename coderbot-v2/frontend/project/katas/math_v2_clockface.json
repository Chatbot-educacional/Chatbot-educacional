{
  "title": "Clockface",
  "content": "A Point represents a two dimensional Cartesian coordinate.",
  "correct_code": "package clockface\n\nimport (\n\t\"math\"\n\t\"time\"\n)\n\n// A Point represents a two dimensional Cartesian coordinate.\ntype Point struct {\n\tX float64\n\tY float64\n}\n\n// SecondHand is the unit vector of the second hand of an analogue clock at time `t`.\n// represented as a Point.\nfunc SecondHand(t time.Time) Point {\n\treturn Point{150, 60}\n}\n\nfunc secondsInRadians(t time.Time) float64 {\n\treturn math.Pi\n}",
  "test_code": "package clockface_test\n\nimport (\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/quii/learn-go-with-tests/math/v1/clockface\"\n)\n\nfunc TestSecondHandAtMidnight(t *testing.T) {\n\ttm := time.Date(1337, time.January, 1, 0, 0, 0, 0, time.UTC)\n\n\twant := clockface.Point{X: 150, Y: 150 - 90}\n\tgot := clockface.SecondHand(tm)\n\n\tif got != want {\n\t\tt.Errorf(\"Got %v, wanted %v\", got, want)\n\t}\n}\n\n// func TestSecondHandAt30Seconds(t *testing.T) {\n// \ttm := time.Date(1337, time.January, 1, 0, 0, 30, 0, time.UTC)\n\n// \twant := clockface.Point{X: 150, Y: 150 + 90}\n// \tgot := clockface.SecondHand(tm)\n\n// \tif got != want {\n// \t\tt.Errorf(\"Got %v, wanted %v\", got, want)\n// \t}\n// }\n\npackage clockface\n\nimport (\n\t\"math\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestSecondsInRadians(t *testing.T) {\n\tthirtySeconds := time.Date(312, time.October, 28, 0, 0, 30, 0, time.UTC)\n\twant := math.Pi\n\tgot := secondsInRadians(thirtySeconds)\n\n\tif want != got {\n\t\tt.Fatalf(\"Wanted %v radians, but got %v\", want, got)\n\t}\n}",
  "difficulty": "Intermedi√°rio"
}